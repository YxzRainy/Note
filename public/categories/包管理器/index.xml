<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>包管理器 on Rainy · Note</title>
    <link>https://note.yxzi.xyz/categories/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/</link>
    <description>Recent content in 包管理器 on Rainy · Note</description>
    <image>
      <url>https://note.yxzi.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://note.yxzi.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 31 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://note.yxzi.xyz/categories/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>npm view</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-view/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-view/</guid>
      <description>npm view 显示有关模块的数据。</description>
    </item>
    
    <item>
      <title>npm package-lock.json</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/package-lock.json/</link>
      <pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/package-lock.json/</guid>
      <description>package-lock.json 是在 npm install时候生成一份文件。记录了 node_modules 目录下所有模块（包）的名称、版本号、下载地址、及这个模块又依赖了哪些依赖。
作用 如果重新 npm install 的时候以及当 node_modules 文件夹并不存在或被删除时，需要用到 npm install 重新装载全部依赖时，通过 package-lock.json 可以直接表明下载地址和相关依赖，就无需再从 package.json 逐个分析包的依赖项，因此会大大加快安装速度，package-lock.json 目的就是确保所有库包与你上次安装的完全一样。</description>
    </item>
    
    <item>
      <title>npm config</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-config/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-config/</guid>
      <description>npm config npm config get registry 查看源地址
npm config set registry 设置源地址</description>
    </item>
    
    <item>
      <title>npm init</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-init/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-init/</guid>
      <description>npm init 创建模块。用来初始化生成一个新的package.json文件。默认有一个引导界面，你可以一步步的配置，也可以通过带尾缀-f或-y来直接跳过引导界面。
npm init -y/npm init -f
创建模块，并直接跳过引导，直接生成一个默认的package.json文件。
使用-f创建，系统会提示npm WARN using &amp;ndash;force Recommended protections disabled.</description>
    </item>
    
    <item>
      <title>npm install</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-install/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-install/</guid>
      <description>npm install 在当前项目中，读取package.json里面的 dependencies 和devDependencies的配置来安装需要依赖的模块。
install 可简写为 i。
npm install jquery 在当前项目中安装 jquery 模块，默认安装的是最新版本。
npm install jquery -g 全局安装 jquery 模块，默认安装的是最新版本。
npm install jquery@3 安装 jquery 3.X.X 中的最新版本。
npm install jquery@3.0.1 安装指定版本的模块，也可用于将模块更新到指定版本。
npm install &amp;ndash;save --save是默认值，在 package.js文件的 dependencies 字段写入依赖，表示运行依赖（生产环境使用，项目上线后依旧会带着该模块）。
&amp;#34;dependencies&amp;#34;: {  &amp;#34;jquery&amp;#34;: &amp;#34;^3.6.0&amp;#34; } npm install &amp;ndash;save-dev 在 package.js文件的 devDependencies 字段写入依赖，表示开发依赖（开发环境使用，项目上线后不会再带着该模块）。
&amp;#34;devDependencies&amp;#34;: {  &amp;#34;jquery&amp;#34;: &amp;#34;^3.6.0&amp;#34; } </description>
    </item>
    
    <item>
      <title>npm install</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-run/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-run/</guid>
      <description>npm run package.json的scripts字段，可以用于指定脚本命令，供npm直接调用。npm run会创建一个 Shell，执行指定的命令。
start和test属于特殊命令，可以省略 run，其余的都得带上 run。
npm run的参数：
 如果不加任何参数，直接运行，会列出package.json里面所有可以执行的脚本命令 可配置参数，格式是加上两个连词线（&amp;ndash;）  </description>
    </item>
    
    <item>
      <title>npm list</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-list/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-list/</guid>
      <description>npm list 查看当前项目安装的所有模块。
npm list jquery 查看 jquery 模块的版本号。
npm list -g 查看本机全局安装的模块
npm list -g &amp;ndash;depth 0 列出全局安装的模块 带上[&amp;ndash;depth 0] 不深入到模块的支点 更简洁。</description>
    </item>
    
    <item>
      <title>npm package.json</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/package.json/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/package.json/</guid>
      <description>package.json 项目或模块的描述文件。
使用npm install安装模块的时候，会自动读取项目中package.json里面的 dependencies 和devDependencies的配置，来安装需要依赖的模块。
install 可简写为 i。
name 模块名。
version 模块版本号。
description 模块描述。
&amp;quot;^3.6.0&amp;quot;表示安装 3.X.X 中最新的版本。 &amp;quot;~3.6.0&amp;quot;表示安装 3.0.X 中最新的版本。
&amp;quot;3.6.0&amp;quot;若不加^或~，则表示指定安装3.6.0这个版本。
&amp;#34;dependencies&amp;#34;: {  &amp;#34;jquery&amp;#34;: &amp;#34;^3.6.0&amp;#34; } homepage 包的官网 url
contributors 模块的其他贡献者
main 程序的主入口文件。默认是模块根目录下的 index.js。
script 脚本。
repository 模块代码存放的地方，一般是版本控制器：git、svn等。
keywords 关键字
author 包的作者姓名
license dependencies/devDependencies 依赖包列表。
dependencies是运行时依赖的包。
devDependencies是开发时依赖的包。</description>
    </item>
    
    <item>
      <title>npm uninstall</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-uninstall/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-uninstall/</guid>
      <description>npm uninstall 卸载当前项目中的模块。
npm uninstall -g 卸载全局中的模块（慎用）</description>
    </item>
    
    <item>
      <title>npm update</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-update/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/npm-update/</guid>
      <description>npm update 将模块更新到最新版本
npm update jquery -g 更新指定全局模块。</description>
    </item>
    
    <item>
      <title>npm 基础命令</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%91%BD%E4%BB%A4/%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</guid>
      <description>基础命令 npm -v 查看本机已安装的 npm 的版本
npm help 查看 npm 命令列表。</description>
    </item>
    
    <item>
      <title>yarn</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/yarn/yarn/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/yarn/yarn/</guid>
      <description>Yarn Yarn 在 npm5 之前，优势明显，但在 npm5 之后，两者差别不大。
安装 全局安装：
npm install -g yarn 如果以后要将 Yarn 更新到最新版本，请运行：
yarn set version latest 优点 速度快
 并行安装。 离线模式  安装版本统一
更简洁的输出。
多注册来源处理。
更好的命令语义化。</description>
    </item>
    
    <item>
      <title>yarn 命令</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/yarn/yarn-add/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/yarn/yarn-add/</guid>
      <description>命令 yarn add 添加模块。
yarn remove 删除模块。
yarn add jquery &amp;ndash;dev 安装开发环境的jquery依赖。</description>
    </item>
    
    <item>
      <title>包管理器</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/</guid>
      <description>包管理器 </description>
    </item>
    
    <item>
      <title>npm 镜像</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/npm-%E9%95%9C%E5%83%8F/</link>
      <pubDate>Sat, 30 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/npm-%E9%95%9C%E5%83%8F/</guid>
      <description>npm 镜像 因为 npm 服务器在国外，因此我们有时候 install 一些 package 的时候，会因为网络问题而下载失败，比如运行npm install时，出现以下错误：
 idealTree:Test: sill idealTree buildDeps 所以，我们需要换一个国内的镜像。
配置源地址为国内的淘宝镜像：
npm config set registry https://registry.npm.taobao.org 使用 nrm 工具切换淘宝源
npx nrm use tao 检查是否设置成功：
npm config get registry # 淘宝镜像 https://registry.npm.taobao.org/ 重新安装即可。</description>
    </item>
    
    <item>
      <title>npm</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/npm/</link>
      <pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/npm/</guid>
      <description>npm npm 是Node.js的开放式模块登记和管理系统，是Node.js包的标准发布平台，用于Node.js包的发布、传播、依赖控制。
npm 提供了命令行工具，可以方便地下载、安装、升级、删除包，也可以让你作为开发者发布并维护包。
NPM 官网
安装 安装 Node.js自带 npm，所以安装 Node.js</description>
    </item>
    
    <item>
      <title>为什么要使用 npm</title>
      <link>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8-npm-/</link>
      <pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/packagemanager/npm/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8-npm-/</guid>
      <description>为什么要使用 npm 网上的 npm 教程主要都在讲怎么安装、配置和使用 npm，却不告诉新人「为什么要使用 npm」。今天我就来讲讲这个话题。
本文目标读者是「不太了解 npm 的新人」，大神您别看了，不然又说我啰嗦了 。
社区 程序员自古以来就有社区文化：
社区的意思是：拥有共同职业或兴趣的人们，自发组织在一起，通过分享信息和资源进行合作。
虚拟社区的参与者经常会在线讨论相关话题，或访问某些网站。
前端程序员也有社区，世界上最大的前端社区应该就是 GitHub 了。
前端通过 GitHub ：
 分享源代码（线上代码仓库） 讨论问题（Issue 列表） 收集学习资源和常去的网站（比如我收集的优质中文前端博客）  加入社区最大的好处之一是，你可以使用别人贡献的代码，你也可以贡献代码给别人用。
共享代码 前端是怎么共享代码的呢？
在 GitHub 还没有兴起的年代，前端是通过网址来共享代码
比如你想使用 jQuery，那么你点击 jQuery 网站上提供的链接就可以下载 jQuery，放到自己的网站上使用
GItHub 兴起之后，社区中也有人使用 GitHub 的下载功能，但这很麻烦。
比如，当一个网站依赖的代码越来越多，程序员们发现这是一件很麻烦的事情：
去 jQuery 官网下载 jQuery。
去 BootStrap 官网下载 BootStrap。
去 Underscore 官网下载 Underscore。 ……
有些程序员就受不鸟了，一个拥有三大美德的程序员 Isaac Z. Schlueter （以下简称 Isaaz）给出一个解决方案：
用一个工具把这些代码集中到一起来管理吧。
这个工具就是他用 JavaScript （运行在 Node.js 上）写的 npm，全称是 Node Package Manager。</description>
    </item>
    
  </channel>
</rss>
