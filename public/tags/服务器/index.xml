<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>服务器 on Rainy · Blog</title>
    <link>https://yxzi.xyz/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
    <description>Recent content in 服务器 on Rainy · Blog</description>
    <image>
      <url>https://yxzi.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://yxzi.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 30 Apr 2022 06:00:00 +0000</lastBuildDate><atom:link href="https://yxzi.xyz/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP</title>
      <link>https://yxzi.xyz/mynote/4-specialty/internet/http/http/</link>
      <pubDate>Sat, 30 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/mynote/4-specialty/internet/http/http/</guid>
      <description>HTTP 超文本传输协议。详细规定了浏览器和万维网服务器之间互相通信的规则。
请求报文 浏览器向服务器发送内容的过程叫做请求。
请求报文一般包含四部分：行、头、空行、体。
请求行 请求类型：GET、POST 等。
URL 。
HTTP 协议的版本。
GET /ValidateLogin?&amp;amp;userI=4234234&amp;amp;password=234234 HTTP/1.1 请求头 请求头的格式通常时键名:键值
Accept-Encoding: gzip, deflate, br Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,en- Cookie: Hm_lvt_a2e2e465098d883036e3cfad66f7203d=1633793709; Hm_lvt_bf329994f1e3ebf56f3712e11a46cb4a=1633794836; Hm_lvt_8516e418a4e3ac3474b3c13bdb4687e7=1638612924; _uab_collina=164345858532791240726438 Host: 127.0.0.1:5500 Content-Type # 设置请求体n类型 请求空行 空行必须有。
请求体 GET 的请求体是空的。
POST 的请求体可以不为空，也可以为空。
响应报文 服务器给客户端/浏览器返回结果的过程叫做响应。
响应报文一般包含四部分：行、头、空行、体。
响应行 HTTP 版本
响应状态码
响应状态字符串
HTTP/1.1 200 OK 响应头 Server: JSP3/2.0.14 Date: Sat, 30 Apr 2022 08:16:27 GMT Content-Type: text/javascript; charset=utf-8 Content-Length: 15758 Content-Encoding: gzip 响应空行 必须有</description>
    </item>
    
    <item>
      <title>私有地址</title>
      <link>https://yxzi.xyz/mynote/4-specialty/internet/%E7%A7%81%E6%9C%89%E5%9C%B0%E5%9D%80/</link>
      <pubDate>Mon, 21 Mar 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/mynote/4-specialty/internet/%E7%A7%81%E6%9C%89%E5%9C%B0%E5%9D%80/</guid>
      <description>私有地址 私有 IP 地址是一段保留的 IP 地址。只使用在局域网中，无法在 Internet 上使用。
NAT－Network Address Translation 网络地址转换
私有地址范围： A 类 10.0.0.0/8， 即 10.0.0.0&amp;ndash;10.255.255.255
B 类 172.16.0.0/12， 即 172.16.0.0&amp;ndash;172.31.255.255
C 类 192.168.0.0/ 16， 即 192.168.0.0&amp;ndash;192.168.255.255</description>
    </item>
    
    <item>
      <title>SHH 密钥登录</title>
      <link>https://yxzi.xyz/mynote/4-specialty/linux/shh-%E5%AF%86%E9%92%A5%E7%99%BB%E9%99%86/</link>
      <pubDate>Fri, 22 Oct 2021 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/mynote/4-specialty/linux/shh-%E5%AF%86%E9%92%A5%E7%99%BB%E9%99%86/</guid>
      <description>SHH 密钥登录 用 xshell 生成密钥 新建用户密钥生成向导
输入密钥长度，比如 2024，下一步
输入密钥名称、密码，下一步
将公钥保存为文件，完成
将公钥上传到服务器 我这里用的服务器是 Linux，以及宝塔面板。
进入服务器的**/root/.ssh路径，在这个文件夹中新建authorized_keys文件，并将之前保存的公钥中的文件内容复制到新建的authorized_keys**文件中。
配置 sshd_config 找到服务器下的**/etc/ssh/sshd_config**，点击编辑。
核对文件中的内容是否与一下内容一致，不一致请作出对应的的修改。
注意，一下内容前面的注释符号**#**请删掉。
AuthorizedKeysFile .ssh/authorized_keys PasswordAuthentication no </description>
    </item>
    
    <item>
      <title>登录宝塔</title>
      <link>https://yxzi.xyz/mynote/4-specialty/linux/%E7%99%BB%E9%99%86%E5%AE%9D%E5%A1%94/</link>
      <pubDate>Fri, 22 Oct 2021 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/mynote/4-specialty/linux/%E7%99%BB%E9%99%86%E5%AE%9D%E5%A1%94/</guid>
      <description>登录宝塔 前言 本文是我第一次使用服务器搭建网站后所写的，本文使用的是以下产品。
轻量云服务器 CentOS 7.6 64bit
Putty 用于 Windows 从本地登陆到远程 Linux 服务器
宝塔 下载 Putty 用 Putty 登陆到 Linux 配置 Putty  Host Name（IP address）：轻量应用服务器的公网 IP Port：轻量应用服务器的连接端口，必须设置为22。 Connect type：选择SSH. Saved Sessions：填写会话名称，例如 Rainy。 配置 “Host Name” 后，再配置 “Saved Sessions” 并 Save，则后续使用时可直接双击 “Saved Sessions” 下保存的会话名称登录到对应服务器。  输入用户名和密码   填写完成后单击 open，进入到 Putty 的运行界面，提示 login as.
  在login as后输入用户名，一般都是 root，按 Enter。
  输入密码，这里注意密码在输入时是不显示的，大家不要以为密码没输入，输入完成后按 Enter.
  登陆完成。
  安装宝塔 Centos 系统直接在登陆后 Putty 界面输入以下命令安装。</description>
    </item>
    
    <item>
      <title>安装 Apache</title>
      <link>https://yxzi.xyz/mynote/4-specialty/language/php/%E5%AE%89%E8%A3%85-apache/</link>
      <pubDate>Thu, 07 Jan 2021 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/mynote/4-specialty/language/php/%E5%AE%89%E8%A3%85-apache/</guid>
      <description>安装 Apache 官方下载地址Apache 进不去的话，就挂个 VPN，下载好后解压，我们会得到一个名为 Apache24 的文件夹，我们先将这个文件夹放到你想要放置的目录，我这里是D:\AppInstallPath\Apache24.
目录文件解析 bin 和 cgi -bin 文件夹是 windows 下的一些可执行文件。
conf 文件夹是 Apache 的配置文件目录。
error 文件夹是 Apache 的错误日志。
htdoce 文件夹是 Apache 的默认主机地址（网站的根目录文件，默认为 index）。
modules 文件夹是 Apache 的模块，Apache 的所有功能都是模块化的，你想要什么功能，就可以在配置文件中去加载对应功能的模块（so 后缀的文件）
bin 文件夹解析 ab.exe 是提供压力测试（当很多人访问你的网站时，你的网站是否能承载）的一个程序。
ApacheMonitor.exe 是管理右下角最小化的图标的。
httpd.exe 很重要。
conf 文件夹解析 httpd.conf 是主配置文件。
extra 文件夹中都是子配置文件（比如 httpd-vhosts.conf），当我们需要用这些子配置文件的时候，我们需要到主配置中文件中去加载这些子配置文件。
Httpd.exe 代表着服务器的进程，它运行之后，服务器才能运行。</description>
    </item>
    
    <item>
      <title>网站访问流程</title>
      <link>https://yxzi.xyz/mynote/4-specialty/internet/%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Wed, 06 Jan 2021 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/mynote/4-specialty/internet/%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E6%B5%81%E7%A8%8B/</guid>
      <description>网站访问流程 静态网站  通过电脑打开浏览器输入 URL（资源的绝对路径），比如https://yxzi.xyz/:80/index.html DNS 服务器，先找本地 DNS（本地 hosts 文件），再找网络 DNS ，然后将域名（https://yxzi.xyz/）解析为 IP（192.168.1.0:80/index.html），最后将解析出来的 IP 返回给浏览器。 浏览器通过 IP（192.168.1.0:80/index.html）找到服务器， 再通过端口（80）找到服务器上的服务软件 Apache。 通过 Apache，就可以得到 一个 URI（资源都相对路径），Apache 根据这个 URI（/index.html），即可获取到服务器上文件名为 index.html 的文件。 Apache 会读取这个文件中的数据，并将最终结果返回给浏览器，反之，如果服务器上的文件不存在，那么浏览器会返回给浏览器一个错误，比如 404（链接所指向的网页不存在） 错误。 浏览器得到 Apache 返回的数据之后，它会解析这些数据，并将这些数据以某种方式呈现给用户。  动态网站  通过电脑打开浏览器输入 URL（资源的绝对路径），比如https://yxzi.xyz/:80/index.pnh DNS 服务器，先找本地 DNS（本地 hosts 文件），再找网络 DNS ，然后将域名（https://yxzi.xyz/）解析为 IP（192.168.1.0:80/index.php），最后将解析出来的 IP 返回给浏览器。 浏览器通过 IP（192.168.1.0:80/index.php）找到服务器， 再通过端口（80）找到服务器上的服务软件 Apache Apache 就可以得到 一个 URI（资源都相对路径），Apache 根据这个 URI（/index.php），即可获取到服务器上文件名为 index.php 的文件。 但又因为网站是动态的，所以 Apache 是无法识别后缀为 PHP 的文件的，因此在这里需要一个叫 PHP 引擎的东西，Apache 将 这个 PHP 文件交给 PHP 引擎，PHP 引擎读取 PHP 文件之后，需要将这个文件解析为 html 文件 ，注意，这时的 PHP 引擎可能会去寻找数据库，并对数据库进行一些操作（读取、放入、修改数据库等等）。最后，PHP 引擎会将解析后的 HTML 数据（PHP 文件中的数据和数据库中的数据），全部返回给 Apache。 Apache 会读取 PHP 引擎返回的内容，并将最终结果返回给浏览器，反之，如果服务器上的文件不存在，那么浏览器会返回给浏览器一个错误，比如 404（链接所指向的网页不存在） 错误。 浏览器得到 Apache 返回的数据之后，它会解析这些数据，并将这些数据以某种方式呈现给用户。  </description>
    </item>
    
    <item>
      <title>DNS 和端口</title>
      <link>https://yxzi.xyz/mynote/4-specialty/internet/dns-%E5%92%8C%E7%AB%AF%E5%8F%A3/</link>
      <pubDate>Mon, 04 Jan 2021 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/mynote/4-specialty/internet/dns-%E5%92%8C%E7%AB%AF%E5%8F%A3/</guid>
      <description>DNS 和端口 DNS DNS 是互联网的一项服务，它作为将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。
简单的讲 DNS 就是翻译官，比如它会将http://www.baidu.com翻译成220.181.111.188让机器理解。
DNS 有什么用 DNS 是用来做域名解析的，它会在你上网输入网址后，把它转换成 IP，然后去访问这个 IP 所指定的服务器，没有它，你想上百度就要记住百度的 IP，上 163 就要记住 163 的 IP，有了 DNS 的处理，你只需要记住对应网站的域名（网址），比如https://yxzi.xyz/。
DNS 是一个按层次结构排列的分布式系统，由许多 DNS 服务器组成。DNS 服务器是注册加入 DNS 的任何计算机。它具有域名和 IP 地址的索引，并且在请求时，它可以告诉你与域名关联的当前 IP 地址。
如果它不知道，那么它将尝试从其他 DNS 服务器中找出。
因此，当您在浏览器中键入域名时，浏览器会询问 DNS 服务器该域的 IP 地址是什么，DNS 服务器会尝试告诉你。
端口 简单来说：
 在一台计算机上，端口用来指定你想要访问这台物理设备上的哪个程序。
 IP 能锁定一台物理机器，对应着一张网卡，网卡会接收外界发来的数据包。但是问题来了，网卡给程序提供了接口，你监听一下我，要是有消息来了，我就转发给你，这样应用程序就能收到数据了。
但是问题来了，程序 A 和程序 B 都需要监听网卡接发数据，网卡说那我把接到的数据都发给你两，你们自己看着办吧。
好，小 A 小 B 都接收了。
但是又来了 CDEF&amp;hellip;&amp;hellip;，不行了，每个包都被发到了所有应用程序，每个应用程序都累得不行，最终垮了。
好，那网卡说我给你们加个表示吧，我们之间可以用一个号码来作为标识，我和小 A 之间就用 1 来标识，
如果外界发给 1 号标识的数据我就转发给你，你监听我的时候得告诉我你监听的是 1，我就转发 1 的数据包给你。</description>
    </item>
    
    <item>
      <title>IP 和域名</title>
      <link>https://yxzi.xyz/mynote/4-specialty/internet/ip-%E5%92%8C%E5%9F%9F%E5%90%8D/</link>
      <pubDate>Mon, 04 Jan 2021 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/mynote/4-specialty/internet/ip-%E5%92%8C%E5%9F%9F%E5%90%8D/</guid>
      <description>IP 和域名 IP IP 具有唯一性，像人的身份证一样，是唯一的。
通俗地讲就是互联网世界的门牌号，通过 IP 地址就可以准确无误的找到某台计算机的位置，它具有唯一性，所以当我们访问某个 IP 的时候才不会出现错误，他就像我们的身份证号码那样独一无二，我们可以和别人同名，但是绝不可能和别人有同样的身份证号码。
首先要确定你的 IP 地址是否是以 192.168 开头，如果是这个地址的话，不需要担心。这是内网的 IP 地址，在外网是无法直接访问的。如果不是内网的地址，有可能会遭到黑客的攻击。这需要一定的专业技术，普通人很难进行攻击，而且你的电脑应该需要有很强的利用价值，才会让人费时费力对你发起攻击之心，所以知道你 IP 对于大多数人来说不能对你做什么。
域名 IP 不方便我们记忆，而域名，则是为了我们更好的记忆某一个网站的地址。
域名（Domain Name）是由一串字符组成的，它指向某一个具体的 IP 地址。</description>
    </item>
    
    <item>
      <title>服务器</title>
      <link>https://yxzi.xyz/mynote/4-specialty/internet/%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Mon, 04 Jan 2021 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/mynote/4-specialty/internet/%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>服务器 在网络环境下，根据服务器提供的服务类型不同，分为文件服务器，数据库服务器，应 用程序服务器，WEB 服务器等。
一台个人计算机也可以成为一台服务器，只要这台计算机可以提供服务，那么，如何让这台计算机提供服务呢？
只需要在这台计算机上安装可以提供服务的软件（服务软件）。
比如一台 Web 服务器，它如果要提供 Web 服务（网站访问），就需要安装 Web 服务软件，Apache，Tomcat， Iis 等等
服务器是网站的灵魂，是打开网站的必要载体，没有服务器的网站用户无法浏览。服务器就像一块敲门砖，就算网站在搜索引擎里的排名再好，网站打不开，用户无法浏览，网站就没有用户体验可言，网站能被打开是第一个重点。
提到服务器对于电脑爱好者来说一定不陌生，一般我们很难看到真正的服务器，因为服务器一般均放置在机房重点，闲人一般均是免进的，所以说起服务器，好多未接触的朋友都觉的很陌生，介于此，斯百德就为不明白服务器是什么的小伙伴们，揭开服务器神秘的面纱。
其实服务器的模样就和电脑的主机很相似，但是服务器是网站的灵魂，是打开网站的必要载体，没有服务器的网站用户无法浏览。服务器就像一块敲门砖，就算网站在搜索引擎里的排名再好，网站打不开，用户无法浏览，网站就没有用户体验可言，网站能被打开是第一个重点。比如我们每天浏览的网站，其实数据均在服务器，服务器一般都在一些 IDC 数据中心机房以及电信等网络大厦里面。
服务器，也称伺服器。服务器是网络环境中的高性能计算机，它侦听网络上的其他计算机（客户机）提交的服务请求，并提供相应的服务，为此，服务器必须具有承担服务并且保障服务的能力。我们这里提到的服务器，主要是指的 Web 服务器，我们也称之为专用服务器，是专为网站业务应用的服务器，这种服务器可以向发出请求的浏览器提供文档的程序。Web 服务器也是一种被动的程序，只有当服务器接收到浏览器发出的请求时，服务器才会响应。
由于Web 服务器是一种被动的程序，所以不同类型的网站对 Web 服务器的要求差别很大。企业网站和个人网站一般都是展示型网站，所以他们对服务器的性能要求一般都不高。电子商务型网站以及门户型等网站一般访问量用户比较大，这些大型网站对服务器的需要则较高。
目前，用户使用最多的 web 服务器软件有两个：微软的信息服务器（iis）和 Apache。而架设 Web 服务器比较常见的操作系统有 Windows，Linux 和 Unix。Linux 的安全性在这三个系统中最高，同时可以支持多个硬件平台，而且其是开源软件，市场价格更低，甚至用户可以下载免费的代码来搭建 Web 服务器。Web 服务器的操作更简单，性能更优越，目前使用率非常的高，Unix 则比较小众！</description>
    </item>
    
  </channel>
</rss>
