<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>链接查询 on Rainy · Blog</title>
    <link>https://yxzi.xyz/Sub/Blog/tags/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/</link>
    <description>Recent content in 链接查询 on Rainy · Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 30 Apr 2022 06:00:00 +0000</lastBuildDate><atom:link href="https://yxzi.xyz/Sub/Blog/tags/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL 交叉链接</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/%E4%BA%A4%E5%8F%89%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Sat, 30 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/%E4%BA%A4%E5%8F%89%E9%93%BE%E6%8E%A5/</guid>
      <description>交叉链接 </description>
    </item>
    
    <item>
      <title>MySQL 内链接</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/sql-99/%E5%86%85%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Thu, 28 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/sql-99/%E5%86%85%E9%93%BE%E6%8E%A5/</guid>
      <description>内连接 该语法比 SQL 92 的链接查询语法的可读性要高。
SELECT 查询列表FROM 表一 别名 链接类型JOIN 表二 别名# SQL 92 用 WHERE，SQL99 用 ONON 链接条件WHERE </description>
    </item>
    
    <item>
      <title>MySQL 等值链接</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/sql-92/%E5%86%85%E8%BF%9E%E6%8E%A5/%E7%AD%89%E5%80%BC%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Wed, 27 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/sql-92/%E5%86%85%E8%BF%9E%E6%8E%A5/%E7%AD%89%E5%80%BC%E9%93%BE%E6%8E%A5/</guid>
      <description>等值链接 判断不同表中都包含的字段是否相等，等于则显示，不等于则过滤。且一般都用的是等于符号来判断。
查询的是多张表的交集部分。
一般需要为表起别名。
注意 使用链接查询，很多时候容易出现Column &#39;字段名&#39; in ambiguousfield 错误，这种情况一般是因为不同的表中含有相同的字段名，导致系统无法知道我们到底要查询哪个表中的字段。这个时候只需要指定一下我们要查询的是哪个表中的字段即可。
查询女神名所对应的男神名 SELECTname,boyNameFROMbeauty,boysWHEREbeauty.boyfriend_id=boys.id;查询员工名所对应的部门名 SELECTlast_nameAS员工名,department_nameAS部门名FROMemployees,departmentsWHEREemployees.department_id=departments.department_id查询员工名、工种号、工种名 链接查询通常比较长，因此我们可以给表定义一个别名。
注意，如果我们为一些表起了别名之后，后续的语句当中如果需要用到这些表，则只能用我们定义的别名，不能用原本的表名。
#因为jobs表和employees表中都用job_id，#系统不知道我们到底要查询哪一个，#因此，这里需要指定一下我们要查询哪个表中的job_idSELECTlast_name,员工表.job_id,job_titleFROMemployeesAS员工表,jobsAS工种表WHERE员工表.job_id=工种表.job_id;查询城市名中第二个字符为o的部门和城市名 SELECTdepartment_name,cityFROMdepartmentsAS部门表,locationsAS位置表WHERE部门表.location_id=位置表.location_idAND位置表.cityLIKE&amp;#39;_o%&amp;#39;;查询每个城市的部门个数 SELECTCOUNT(*),cityFROMdepartmentsAS部门表,locationsAS位置表WHERE部门表.location_id=位置表.location_idGROUPBYcity查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资 SELECTdepartment_name,部门表.manager_id,MIN(salary)FROMdepartmentsAS部门表,employeesAS员工表WHERE部门表.department_id=员工表.department_idANDcommission_pctISNOTNULLGROUPBYdepartment_name,部门表.manager_id查询每个工种的工种名和员工的个数，并且按员工的个数降序 SELECTjob_titleAS工种名,COUNT(*)AS员工个数FROMemployeesAS员工表,jobsAS工种表WHERE员工表.job_id=工种表.job_idGROUPBY工种名ORDERBY员工个数DESC查询员工名、部门名和所在城市 SELECTlast_name,department_name,cityFROMemployeesAS员工表,departmentsAS部门表,locationsAS位置表WHERE员工表.</description>
    </item>
    
    <item>
      <title>MySQL 自链接</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/sql-92/%E5%86%85%E8%BF%9E%E6%8E%A5/%E8%87%AA%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Wed, 27 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/sql-92/%E5%86%85%E8%BF%9E%E6%8E%A5/%E8%87%AA%E9%93%BE%E6%8E%A5/</guid>
      <description>自链接 判断同一张表中的不同字段是否相等，相等则显示，不相等则过滤。需要给同一张表取不同的别名，让系统分清同一张表中的不同字段。
查询员工名所对应的领导名称 SELECT员工表.</description>
    </item>
    
    <item>
      <title>MySQL 非等值链接</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/sql-92/%E5%86%85%E8%BF%9E%E6%8E%A5/%E9%9D%9E%E7%AD%89%E5%80%BC%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Wed, 27 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/sql-92/%E5%86%85%E8%BF%9E%E6%8E%A5/%E9%9D%9E%E7%AD%89%E5%80%BC%E9%93%BE%E6%8E%A5/</guid>
      <description>非等值链接 新建查询并运行。
CREATETABLEjob_grades(grade_levelVARCHAR(3),lowest_salint,highest_salint);INSERTINTOjob_gradesVALUES(&amp;#39;A&amp;#39;,1000,2999);INSERTINTOjob_gradesVALUES(&amp;#39;B&amp;#39;,3000,5999);INSERTINTOjob_gradesVALUES(&amp;#39;C&amp;#39;,6000,9999);INSERTINTOjob_gradesVALUES(&amp;#39;D&amp;#39;,10000,14999);INSERTINTOjob_gradesVALUES(&amp;#39;E&amp;#39;,15000,24999);INSERTINTOjob_gradesVALUES(&amp;#39;F&amp;#39;,25000,40000);查询员工的工资和工资级别 SELECTsalary,grade_levelFROMemployeesAS员工表,job_grades工资等级表WHERE员工表.</description>
    </item>
    
    <item>
      <title>MySQL 外连接</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/sql-99/%E5%A4%96%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Mon, 25 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/sql-99/%E5%A4%96%E8%BF%9E%E6%8E%A5/</guid>
      <description>外连接 左外链接 右外链接 全外链接 </description>
    </item>
    
    <item>
      <title>MySQL 链接查询</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Mon, 25 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/%E9%93%BE%E6%8E%A5%E6%9F%A5%E8%AF%A2/</guid>
      <description>链接查询 当需要从多张表中查询数据，而这些表之间有关联字段的时候，需要使用连接查询。
笛卡尔乘积错误 表 1 有 N 行，表 2 有 M 行，最终的查询结果就是 M * N 行。
SELECTname,boyNameFROMbeauty,boys导致的原因是因为没有添加有效的链接条件。
只需要添加有效的链接条件即可。
SELECTname,boyNameFROMbeauty,boysWHEREbeauty.boyfriend_id=boys.id;内连接 从结果表中删除与其他被连接表中没有匹配行的所有行。
SQL 92 只支持内链接。
SQL 99 支持内链接，外连接以及交叉链接。并且该版本的语法要比 SQL 92 的可读性要高。
外链接 交叉链接 </description>
    </item>
    
  </channel>
</rss>
