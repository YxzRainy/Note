<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基础查询 on Rainy · Blog</title>
    <link>https://yxzi.xyz/Sub/Blog/tags/%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2/</link>
    <description>Recent content in 基础查询 on Rainy · Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 06 Apr 2022 06:00:00 +0000</lastBuildDate><atom:link href="https://yxzi.xyz/Sub/Blog/tags/%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL 基础查询</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2/%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Wed, 06 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/dql/%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2/%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2/</guid>
      <description>基础查询 我们用的是名为 MyEmployees.sql 和 Girls.sql 的 SQL 文件。
语法 select查询列表from表名特点  查询列表可以是表中的字段、常量、表达式、函数。 查询的结果是一个虚拟的表格。  查询表中的单个字段 SELECTlast_nameFROMemployees;查询表中的多个字段 会以特定的顺序显示我们查询的字段。
SELECTlast_name,first_name,emailFROMemployees;查询表中的所有字段 会以表原本的字段顺序显示我们查询的字段
SELECT*FROMemployees;区分关键字和字段名 MySQL 中，我们可以用一对着重号**``**来区 MySQL 中的分字段和关键字
SELECT`NAME`FROMrainy;查询常量 SELECT&amp;#39;john&amp;#39;;查询表达式 SELECT100*57;起别名 自定义字段名（列名），起别名可以使我们更好的理解表。
有时候，字段名可能会是一些表达式，会让输出的虚拟表达中的字段名难以理解，这时候，我们可以为其设置一个便于理解的字段名。
表达式可以用这个表达式的别名来代替该表达式 当我们为一个表达式定义了一个别名，如果后续我们需要用到这个表达式，那么我们可以不用再重复书写表达式，直接写别名即可。
SELECT*,# 因为表中没有年薪这个字段，所以我们需要用表达式来计算每个员工的年薪 salary*12*(1+IFNULL(commission_pct,0))AS年薪FROMemployees# 用表达式所对应的别名来替代表达式，使得语句更好理解 ORDERBY年薪DESC;如果要查询的字段中有重名的情况，也可以使用别名来区分。
AS 关键字 SELECT100-2AS计算结果;SELECTlast_nameAS姓,first_nameAS名FROMemployees;空格 SELECTlast_name姓,first_name名FROMemployees;去掉重复字段 查询员工表中涉及到的所有部门的编号 SELECTDISTINCTdepartment_idFROMemployees;+ 号的作用 两个操作数都为数值型，则做加法运算。
SELECT520+250;其中一方为字符型，试图将字符型数值转换成数值型。 如果转换成功，则继续做加法运算。 如果转换失败，则将字符型数值转换成 0。
SELECT&amp;#34;john&amp;#34;+90;只要其中一方为 Null，则结果肯定为 Null。</description>
    </item>
    
  </channel>
</rss>
