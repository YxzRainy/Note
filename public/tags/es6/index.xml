<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ES6 on Rainy · Note</title>
    <link>https://note.yxzi.xyz/tags/es6/</link>
    <description>Recent content in ES6 on Rainy · Note</description>
    <image>
      <url>https://note.yxzi.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://note.yxzi.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 11 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://note.yxzi.xyz/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript 箭头函数</title>
      <link>https://note.yxzi.xyz/note/technology/language/javascrip/%E5%87%BD%E6%95%B0/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/language/javascrip/%E5%87%BD%E6%95%B0/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</guid>
      <description>箭头函数 任何可以使用匿名函数的位置均可以使用箭头函数。
箭头函数适合与 this 无关的回调，不适合与 this 有关的回调。
// 普通匿名函数 var sum = function (a, b) { 	return a + b; }; console.log(sum(1, 2)); // 箭头函数 var sumES6 = (a, b) =&amp;gt; { 	return a + b; }; console.log(sumES6(4, 3)); 可以看出，定义箭头函在数语法上要比普通函数简洁得多。
参数 没有参数，直接写一个空括号()即可。
只有一个参数，可以省去包裹参数的括号。
多个参数，将参数依次用逗号(,)分隔。
// 无参数 var fun1 = () =&amp;gt; { 	console.log(&amp;#39;无参数&amp;#39;); };  // 只有一个参数 var fun2 = (name) =&amp;gt; { 	console.log(name); };  // 多个参数 var fun3 = (val1, val2, val3) =&amp;gt; { 	return [val1, val2, val3]; }; 函数体 如果箭头函数的函数体中只有一句代码，可以省去函数体的大括号{ }，此时rturn 必须省略。</description>
    </item>
    
    <item>
      <title>JavaScript 语法糖</title>
      <link>https://note.yxzi.xyz/note/technology/language/javascrip/%E8%AF%AD%E6%B3%95%E7%B3%96/</link>
      <pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://note.yxzi.xyz/note/technology/language/javascrip/%E8%AF%AD%E6%B3%95%E7%B3%96/</guid>
      <description>语法糖 对象属性简写 简写对象的属性以及方法。
var name = &amp;#39;月色&amp;#39;; var age = 20; var sex = &amp;#39;男&amp;#39;; // 传统对象的属性 var person = { 	name: name, 	age: age, 	Fun: function () { 	console.log(sex); 	}, }; // 语法糖对象的属性 var personES6 = { 	name, 	age, 	Fun() { 	console.log(sex); 	}, }; console.log(person); console.log(personES6); 模板字符串 用反引号``声明（传统字符串是双引号或单引号）。
通过模板字符串，你可以以${表达式}的形式在模板中插入任何 JavaScript 表达式、变量。
默认支持多行，无需使用\n来换行。
var person = { 	name: &amp;#39;Rainy&amp;#39;, 	age: &amp;#39;20&amp;#39;, }; // 传统字符串拼接 var str = &amp;#39;my name is &amp;#39; + person.</description>
    </item>
    
  </channel>
</rss>
