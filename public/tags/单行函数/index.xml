<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>单行函数 on Rainy · Blog</title>
    <link>https://yxzi.xyz/Sub/Blog/tags/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/</link>
    <description>Recent content in 单行函数 on Rainy · Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 24 Apr 2022 06:00:00 +0000</lastBuildDate><atom:link href="https://yxzi.xyz/Sub/Blog/tags/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL 其他函数</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/%E5%87%BD%E6%95%B0/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sun, 24 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/%E5%87%BD%E6%95%B0/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/%E5%85%B6%E4%BB%96%E5%87%BD%E6%95%B0/</guid>
      <description>其他函数 查询 MySQL 版本号 SELECTVERSION();查询当前处于哪个数据库 SELECTDATABASE();查询当前用户 SELECTUSER()</description>
    </item>
    
    <item>
      <title>MySQL 数学函数</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/%E5%87%BD%E6%95%B0/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sat, 23 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/%E5%87%BD%E6%95%B0/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0/</guid>
      <description>数学函数 用于对数字进行处理，或者返回一个数值。
ROUND(X,D) 计算将 X 四舍五入后，保留 D 位小数后的值。
SELECTROUND(45.4)CEIL(X) 计算将 X 向上取整后的值，这个值 &amp;gt;= X 的最小整数。
SELECTCEIL(1.52)# 返回 1 SELECTCEIL(1)FLOOR(X) 计算将 X 向下取整后的值，这个值 &amp;lt;= X 的最大整数。
SELECTFLOOR(1.2)# 返回 1 SELECTFLOOR(9.9)TRUNCATE(X,D) 不将 X 进行四舍五入，直接保留 D 位小数，或者说是直接截断。
SELECTTRUNCATE(1.69999,2)MOD(N,M) 计算用 N 除以 M 的余数，相当于 N % M。
但%实际上的计算过程是N - (N/M*M)。
SELECTMOD(10,3)# 相当于 SELECT10%3</description>
    </item>
    
    <item>
      <title>MySQL 日期函数</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/%E5%87%BD%E6%95%B0/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sat, 23 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/%E5%87%BD%E6%95%B0/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0/</guid>
      <description>日期函数 用于对日期进行处理，或者返回一个日期的值。
日期格式符号    格式符 功能     %Y 四位的年份   %y 两位的年份   %m 月份(01 - 12)   %c 月份(1 - 12)   %d 日(01, 02, …)   %H 小时(24 小时制)   %h 小时(12 小时制)   %i 分钟(00 - 59)   %s 秒(00 - 59)   %U 星期(0 - 52)，星期天为第一天   %u 星期(0 - 52)，星期一为第一天   %W 星期英文(Sunday — Saturday)   %M 月份英文(January — December)    NOW() 返回系统当前的日期和时间。</description>
    </item>
    
    <item>
      <title>MySQL 流程控制函数</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/%E5%87%BD%E6%95%B0/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sat, 23 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/%E5%87%BD%E6%95%B0/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%87%BD%E6%95%B0/</guid>
      <description>流程控制函数 IF IF(expr1,expr2,expr3)如果 expr1 为 true，则返回 expr2 的值，否则返回 expr3 的值。
SELECTIF(10&amp;gt;5,&amp;#39;大&amp;#39;,&amp;#39;小&amp;#39;)查询所有员工是否都有奖金 SELECTlast_name,commission_pct,IF(commission_pctISNOTNULL,&amp;#39;有奖金&amp;#39;,&amp;#39;无奖金&amp;#39;)AS有无奖金FROMemployeesCASE 它可以当成语句用，也可以当作表达式用。
他有两种用法，第一种用法类似于 switch 语句；第二种用法类似于 多重 if 语句。
查询员工的工资，要求： 部门号 = 30，显示原工资的 1.1 倍。
部门号 = 40，显示原工资的 1.2 倍。
部门号 = 50，显示原工资的 1.3 倍。
其他部门，显示原工资。
SELECTsalary,department_id,#如果department_id等于下面WHEN后面的任意值，则执行这个值对应的THEN后面的语句。CASEdepartment_idWHEN30THENsalary*1.1WHEN40THENsalary*1.2WHEN50THENsalary*1.3#department_id不等于以上值的数据，则执行ELSE后面的语句ELSEsalaryENDAS新工资FROMemployees;查询员工工资的情况 如果部门工资 &amp;gt; 20000，则显示 A 等级
如果部门工资 &amp;gt; 15000，则显示 B 等级
如果部门工资 &amp;gt; 10000，则显示 C 等级</description>
    </item>
    
    <item>
      <title>MySQL 字符函数</title>
      <link>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/%E5%87%BD%E6%95%B0/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/%E5%AD%97%E7%AC%A6%E5%87%BD%E6%95%B0/</link>
      <pubDate>Fri, 22 Apr 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yxzi.xyz/Sub/Blog/mynote/4-specialty/mysql/%E5%87%BD%E6%95%B0/%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0/%E5%AD%97%E7%AC%A6%E5%87%BD%E6%95%B0/</guid>
      <description>字符函数 用于对字符进行处理，并返回一个字符串值。
字符串的索引都是从 1 开始的。
LENGTH(str) 返回 str 的字节长度。
在不同的字符集中，一个汉字和一个英文字母的字节长度都是不一样的。
SELECT# 在 uft-8 字符集中，一个英文和一个空格只占一个字符，一个汉字占三个字节 LENGTH(&amp;#39;Rainy 是憨憨&amp;#39;)AS字符长度;CONCAT(str1,str2,&amp;hellip;) 将 str 1 与 str2 拼接起来，支持多个字符串。
SELECTCONCAT(last_name,&amp;#39;-&amp;#39;,first_name)AS姓名FROMemployees;UPPER(str) 将 str 中的小写字母转为大写字母。
SELECTUPPER(&amp;#39;rainy&amp;#39;)AS转大写LOWER(str) 将 str 中的大写字母转为小写字母。
SELECTLOWER(&amp;#39;RAINY&amp;#39;)AS转小写SUBSTR(str FROM pos FOR len) 指定一个 str，从索引为 pot 的字符开始截取，一直截取到索引 len 的字符为止。若只有 pot ，则截取到最后，
SELECTSUBSTR(&amp;#39;臣世雨是个憨憨&amp;#39;,6)AS截取至最后,SUBSTR(&amp;#39;臣世雨是个憨憨&amp;#39;,4,6)AS截取至指定位置INSTR(str,substr) 返回 substr 在 str 中第一次出现的索引，如果 str 中不存在 substr，则返回 0。
SELECTINSTR(&amp;#39;臣世雨是个憨憨&amp;#39;,&amp;#39;憨憨&amp;#39;);TRIM([remstr FROM] str) 过滤 str 中的 remstr 字符串，默认过滤的是首尾的空格。
LEADING 是过滤首字符。
BOTH 过滤首尾字符。
TRAILING 过滤 尾字符。
# 默认过滤空格 SELECTTRIM(&amp;#39; 臣世雨 &amp;#39;);# 相当于： # 过滤指定的首字符 a SELECTTRIM(LEADING&amp;#39;a&amp;#39;FROM&amp;#39;aaaRainybbb&amp;#39;);# 过滤指定的首尾字符 a SELECTTRIM(BOTH&amp;#39;a&amp;#39;FROM&amp;#39;aaaRainyaaa&amp;#39;);# 也可以省去 BOTH 关键字，也是去掉前后的字符。 SELECTTRIM(&amp;#39;a&amp;#39;FROM&amp;#39;aaaRainyaaa&amp;#39;);# 过滤指定的尾字符 b SELECTTRIM(TRAILING&amp;#39;b&amp;#39;FROM&amp;#39;aaaRainybbb&amp;#39;);LPAD(str,len,padstr) 在 str 的左侧重复插入 padstr，直到字符串总长度达到 len 为止。</description>
    </item>
    
  </channel>
</rss>
